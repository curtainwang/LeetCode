class Solution{
public:
    class cmp{
        public:
        int operator()(ListNode* a, ListNode* b){
            return a->val > b->val;
        }
    };
	ListNode* mergeKLists(vector<ListNode*>& lists){

		priority_queue<ListNode*, vector<ListNode*>, cmp> Q;
		for(int i=0;i<lists.size();i++){
			if(lists[i]) Q.push(lists[i]);
		}
		ListNode head(0);
		ListNode *tail = &head;
		while(!Q.empty()){
			ListNode *tmp = new ListNode(Q.top()->val);
			tail->next = tmp;
			tmp = Q.top()->next;
			Q.pop();
			if(tmp) Q.push(tmp);
			tail = tail->next;
		}
		return head.next;
	}
};
