
vector<vector<int > > fourSum(vector<int>& nums, int target){

	vector<vector<int> > ans;
	int sz = nums.size();
	sort(nums.begin(), nums.end());
	for(int i=0;i<sz-3&&nums[i] + nums[i+1] + nums[i+2] + nums[i + 3] <= target;i++){

		if(i != 0 && nums[i] == nums[i-1]) continue;
		if(nums[i] + nums[sz-1] + nums[sz-2]+ nums[sz-3] < target) continue;
		for(int j=i+1;j<sz-2&&nums[j] + nums[j+1]+nums[j+2] <= target - nums[i];j++){
			if(j != i + 1 && nums[j] == nums[j-1]) continue;
			if(nums[j] + nums[sz-1] + nums[sz-2] < target - nums[i]) continue;
			int res = target - nums[i] - nums[j];
			for(int l = j + 1, r = sz - 1;;){

				for(;l != j + 1 && nums[l] == nums[l - 1];l++);
				for(;r != sz - 1 && nums[r] == nums[r + 1];r--);
				if(l >= r) break;

				if(nums[l] + nums[r] > res) r--;
				else if(nums[l] + nums[r] < res) l++;
				else{
					vector<int> cnt;
					cnt.push_back(nums[i]); cnt.push_back(nums[j]);
					cnt.push_back(nums[l]); cnt.push_back(nums[r]);
					ans.push_back(cnt);	
					l++;r--;
				}
			}
		}
	}
	return ans;
}
