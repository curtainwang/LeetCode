class Solution{
public:
	bool isvalid(vector<vector<char> >& board, int row, int col, int x){
		for(int i=0;i<9;i++){
			if(board[i][col] - '1' == x) return false;
			if(board[row][i] - '1' == x) return false;
		}
		for(int i=0;i<3;i++){
			for(int j=0;j<3;j++){
				if(board[row / 3 * 3 + i][col / 3 * 3 + j] - '1' == x)
					return false;
			}
		}
		return true;
	}
	bool solve(vector<vector<char> >& board){
	    for(int i = 0; i < 9; i++){
			for(int j = 0; j < 9; j++){
				if(board[i][j] == '.'){
					for(int k = 0; k < 9; k++){
						if(isvalid(board, i, j, k)){
							board[i][j] = '1' + k;
							if(solve(board)) return true;
							board[i][j] = '.';
						}
					}
					return false;
				}
			}
		}
		return true;
	}
	void solveSudoku(vector<vector<char> >& board){
	    solve(board);
	}
};
