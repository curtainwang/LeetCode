class Solution{
public:
	vector<int> searchRange(vector<int>& nums, int target){

		int n = nums.size();
		int l = 0, r = n - 1;
		int start = -1, end = -1;
		while(l <= r){
			int mid = (l + r) >> 1;
			if(nums[mid] < target){
				l = mid + 1;
			}
			else if(nums[mid] > target){
				r = mid - 1;
			}
			else if(nums[mid] == target){
				r = mid - 1;
				if(start == -1) start = mid;
				else start = min(start, mid);
			}
		}
		l = 0, r = n - 1;
		while(l <= r){
			int mid = (l + r) >> 1;
			if(nums[mid] < target){
				l = mid + 1;
			}
			else if(nums[mid] > target){
				r = mid - 1;
			}
			else if(nums[mid] == target){
				l = mid + 1;
				end = max(end, mid);
			}
		}
		vector<int>ans;
		ans.push_back(start);
		ans.push_back(end);
		return ans;
	}
};
